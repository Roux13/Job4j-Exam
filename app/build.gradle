apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "ru.job4j.exam"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
        }
    }

    lintOptions {
        abortOnError false
    }

}

apply plugin: 'com.android.application'
//apply plugin: 'jacoco-android'
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.5"
}

//test {
//    finalizedBy jacocoTestReport // report is always generated after tests run
//}
//jacocoTestReport {
//    dependsOn test // tests are required to run before generating the report
//}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
        html.destination file("${buildDir}/jacoco/reports")
    }
}

//task jacocoUnitTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
////    $buildDir = "C:\\projects\\Job4jExam\\app\\build" // Location of the build directory for the build Variant
//    def coverageSourceDirs = [
//            "src/main/java"
//    ]
//    def fileFilter = [
//            '**/R.class',
//            '**/R$*.class',
//            '**/*$ViewInjector*.*',
//            '**/*$ViewBinder*.*',
//            '**/BuildConfig.*',
//            '**/Manifest*.*'
//    ]
//    def javaClasses = fileTree(
//            dir: "$buildDir/intermediates/classes/debug",
//            excludes: fileFilter
//    )
//    classDirectories = files([ javaClasses ])
//    additionalSourceDirs = files(coverageSourceDirs)
//    sourceDirectories = files(coverageSourceDirs)
//    executionData = fileTree(dir: "$buildDir", includes: [
//            "jacoco/testDebugUnitTest.exec"
//    ])
//    reports {
//        xml.enabled = true
//        html.enabled = true
//    }
//}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Room components
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    annotationProcessor "androidx.room:room-compiler:$rootProject.roomVersion"
    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.archLifecycleVersion"
    annotationProcessor "androidx.lifecycle:lifecycle-common-java8:$rootProject.archLifecycleVersion"

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    // required if you want to use Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:2.19.0'
    // required if you want to use Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'

    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation 'org.assertj:assertj-core:3.11.1'

    debugImplementation 'androidx.fragment:fragment-testing:1.2.4'

}